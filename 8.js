var T=0;
var G=false;
var swP=new Array();
/*swP.push([53, 21, 28, 18, 24, 19, 27, 32]);
swP.push([17, 14, 11, 15, 9, 9, 12, 12, 11, 16, 16, 9, 15, 10, 11, 9, 9]);
swP.push([14, 15, 21, 13, 17, 14, 16, 23, 31, 14, 16, 15, 19, 17, 22, 13, 24, 31, 15, 15, 21, 13, 17, 14, 16, 22, 13, 16, 14, 13, 21, 15, 14, 13, 23, 25, 14, 14, 13, 16, 32, 23, 15, 14, 14, 17, 14, 14, 15, 16, 13, 15, 25, 13, 
13, 17, 31, 15, 17, 22, 17, 14, 13, 21, 22, 14, 14, 23, 9, 23, 13, 13, 9, 29, 14, 9, 14, 21, 22, 22, 17, 21, 13, 25, 17, 23, 21, 21, 15, 15, 14, 17, 22, 33, 21, 17, 13, 17, 15, 22, 25, 13, 22, 14, 22, 14, 22, 17, 13, 23, 14, 22, 14,
 19, 14, 14, 23, 23, 23, 23, 14, 16, 9, 13, 16, 15, 21, 21, 21, 17, 14, 23, 21, 15, 14, 21, 25, 14, 14, 14, 23, 17, 14, 22, 23, 21, 26, 21, 21, 15, 14, 21, 17, 16, 17, 13, 25, 21, 13, 37, 21, 21, 17, 14, 32, 23, 15, 17, 33, 13, 21,
  17, 24, 14, 14, 21, 22, 14, 14, 13, 9, 15, 33, 14, 16, 30, 21, 21, 17, 15, 13, 21, 13, 16, 25, 21, 20, 20, 17, 22, 22, 23, 15, 21, 15, 21, 27, 22, 14, 15, 21, 15, 14, 21, 20, 31, 17, 9, 18, 16, 14, 22, 21, 13, 15, 17, 13, 25, 21, 
  23, 15, 14, 31, 16, 15, 31, 14, 21, 14, 21, 21, 26, 18, 20, 30, 13, 47, 16, 27, 23, 23, 22, 25, 31, 14, 20, 20, 9, 23, 22, 16, 15, 13, 13, 22, 14, 27, 15, 21, 30, 21, 15, 16, 21, 22, 17, 17, 14, 14, 15, 24, 17, 14, 14, 23, 14, 21,
   21, 17, 16, 14, 18, 14, 15, 27, 17, 15, 15, 21, 14, 14, 24, 31, 23, 16, 15, 14, 15, 21, 21, 17, 21, 17, 16, 20, 15, 16, 13, 16, 15, 21, 30, 23, 23, 23, 22, 9, 16, 23, 17, 14, 31, 19, 23, 21, 30, 15, 20, 22, 13, 16, 15, 16, 21, 13, 17, 14, 22, 14, 18, 19, 17, 21, 21, 14, 29, 14, 23, 21, 14, 15, 21, 22, 31, 14, 21, 21, 14, 23, 16, 14, 23, 24, 13, 15, 31, 14, 17, 13, 13, 21, 23, 20, 22, 13, 20,
    15, 15, 21, 13, 21, 23, 23, 23, 23, 23, 23, 13, 15, 17, 23, 30, 23, 22, 19, 9, 16, 23, 24, 27, 21, 25, 21, 25, 17, 24, 9, 21, 13, 29, 17, 15, 15, 13, 14, 13, 17, 21, 21, 15, 27, 16, 17, 30, 35, 13, 17, 15, 23, 31, 20, 26, 20, 27, 24,
     15, 13, 15, 26, 29, 14, 15, 21, 14, 31, 21, 15, 14, 15, 15, 25, 17, 25, 21, 22, 21, 15, 18, 15, 21, 27, 17, 14, 15, 14, 15, 21, 25, 15, 14, 15, 21, 14, 25, 14, 13, 31, 13, 23, 13, 24, 21, 20, 21, 13, 22, 21, 13, 21, 21, 14, 21, 15, 25, 21, 21, 14, 30, 16, 24, 14, 15, 27, 15, 14, 20, 27, 14, 25, 17, 29, 23, 21, 16, 15, 23, 24, 14, 27, 16, 22, 17, 33, 14, 14, 13, 13, 21, 25, 21, 30, 14,
      15, 15, 14, 26, 27, 21, 24, 15, 20, 33, 30, 13, 31, 33, 15, 25, 30, 20, 23, 21, 15, 32, 21, 25, 23, 15, 24, 14, 17, 16, 23, 17, 17, 21, 33, 14, 15, 13, 17, 21, 17, 21, 17, 21, 22, 14, 15, 13, 21, 21, 21, 22, 23, 21, 25, 21, 22, 13, 16, 13, 17, 17, 15, 25, 21, 18, 14, 23, 23, 13, 15, 36, 20, 22, 13, 23, 33, 14, 15, 21, 33, 21, 23, 17, 29, 24, 
15, 18, 15, 20, 15, 13, 25, 24, 37, 20, 20, 16, 21, 14, 25, 21, 22, 13, 23, 23, 15, 14, 15, 23, 14, 26, 13, 30, 16, 15, 25, 13, 23, 14, 24, 21, 13, 24, 21, 13, 31,
 27, 9, 23, 14, 13, 17, 21, 15, 16, 14, 44, 21, 30, 17, 9, 13, 23, 14, 14, 23, 23, 21, 13, 21, 21, 14, 29, 21, 27, 17, 22, 13, 15, 13, 16, 23, 15, 22, 13, 17, 14, 16, 9, 17, 14, 14, 23, 19, 13, 9, 21, 9, 13, 26, 18, 21, 14, 21, 16, 30, 27, 25, 15, 9, 16, 30, 21, 32, 22, 21, 15, 16, 23, 23, 14, 23, 21, 9, 13, 13, 17, 17, 25, 17, 23, 14, 26, 21, 25, 21, 15,
 15, 21, 23, 14, 26, 16, 15, 26, 21, 17, 25, 20, 9, 23, 31, 18, 16, 15, 23, 16, 21, 13, 14, 13, 25, 15, 23, 14, 27, 13, 16, 23, 17, 9, 21, 9, 13, 15, 22, 13, 23, 21, 39, 15, 16, 23, 23, 14, 14, 13, 15, 14, 9, 15, 14, 23, 23, 23, 30, 22, 21, 21, 15, 14, 16, 27, 23, 21, 32, 13, 21, 19, 25, 23, 23, 22, 13, 15, 16, 20,
 14, 14, 22, 27, 17, 24, 31, 21, 13, 17, 16, 15, 21, 14, 13, 15, 14, 14, 15, 21, 27, 9, 25, 15, 23, 15, 23, 20, 23, 34, 15, 27, 15, 17, 21, 21, 14, 9, 18, 31,
 14, 15, 24, 17, 15, 15, 13, 16, 15, 13, 23, 14, 14, 17, 14, 23, 31, 22, 30, 15, 14, 9, 17, 21, 13, 21, 20, 25, 14, 20, 17, 13, 23, 21, 21, 15, 23, 16, 25, 21, 22, 20, 21, 30, 16, 20, 14, 25, 15, 21, 22, 14, 21, 23, 13, 22, 14, 19, 23, 13, 20, 21, 15, 16, 15, 25, 16, 9, 13, 23, 33, 15, 27, 17, 21, 14, 23, 15, 15, 31,
 22, 15, 21, 23, 15, 25, 23, 21, 9, 31, 21, 14, 21, 33, 21, 24, 25, 20, 23, 13, 16, 16, 14, 25, 17, 14, 16, 15, 15, 23, 15, 27, 17, 16, 27, 14, 17, 15, 14, 14, 15, 21, 13, 17, 14, 14, 15, 15, 14, 14, 12]);
swP.push([14, 21, 15, 21, 15, 23, 14, 20, 17, 14, 17, 22, 16, 15, 23, 22, 15, 15, 21, 22, 15, 21, 15, 29, 20, 35, 27, 20, 17, 26, 22, 14, 21, 15, 15, 25, 14, 21, 21, 21, 21, 15, 15, 15, 23, 21, 21, 17, 14, 14, 21, 15, 21, 13, 15, 9, 20, 25, 20, 15, 17, 17, 14, 14, 15, 21, 13, 15, 25, 16, 23, 23, 14, 23, 14, 35, 25, 15, 22, 13, 31, 21, 14, 31, 14, 21, 14, 14,
 15, 22, 15, 19, 14, 15, 17, 25, 16, 25, 17, 29, 31, 21, 13, 15, 33, 27, 15, 17, 23, 28, 21, 17, 28, 21, 9, 16, 14, 17, 28, 15, 29, 16, 14, 13, 31, 14, 22, 23, 16, 23, 23, 23, 21, 9, 15, 15, 17, 25, 13, 23, 14, 15, 31, 23, 31, 23, 14, 21, 31, 24, 13, 9, 13, 17, 14, 13, 14, 12, 29, 21, 24, 26, 29, 14, 14, 17, 23, 16, 14,
 23, 16, 27, 15, 33, 15, 15, 21, 14, 14, 20, 9, 18, 16, 9, 25, 9, 18, 21, 16, 20, 27, 14, 15, 16, 9, 18, 14, 13, 23, 29, 21, 23, 21, 28, 21, 23, 21, 23, 17, 14, 25, 13, 21, 25, 21, 15, 13, 14, 31, 16, 20, 27, 14, 15, 23, 29, 21, 16, 21, 26, 9, 18, 27, 17, 16, 16, 13, 29, 23, 13, 25, 21, 17, 21, 15, 23, 22, 15, 30, 22, 15, 21, 21, 16, 9, 34, 35, 15, 26, 30, 15, 14, 14, 21, 21, 26, 21, 25, 25, 14, 15, 14, 23, 13, 22, 13, 20, 15, 13, 23, 25, 14, 21, 23, 17, 14, 12]);
*/
function css( element, property ) {
    return window.getComputedStyle( element, null ).getPropertyValue( property );
}
function getTextWidth(text, font) {
    // re-use canvas object for better performance
    var canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement("canvas"));
    var context = canvas.getContext("2d");
    context.font = font;
    var metrics = context.measureText(text);
    return metrics.width;
}
function S8(glt,ss)
{
	G=true;
	var khchk;
	var sw;
	var dvv,wow;
	var L1=new Array(),L2=new Array(),Lw=new Array();
	if(T>=swP.length)
	{
		//khchk = document.createElement('span');
		//glt.appendChild(khchk);
	}
	
	glt.style.marginLeft=0;
	glt.style.marginRight=0;
	glt.style.textAlignLast="left";
	document.fonts.ready.then(function(){
	var i;
	if(T>=swP.length)
	{
		console.log("88");
		document.title="88";
		sw=new Array();
		for(i=0;i<ss.length;i++)
		{
			//khchk.innerHTML=ss[i];
			//sw.push(khchk.offsetWidth);
			sw.push(getTextWidth(ss[i],css(glt,'font-weight')+" "+css(glt,'font-size')+" "+css(glt,'font-family')))
		}
		swP.push(sw);
	}
	else {sw=swP[T];}
	
	
	var ks="";
	for(i=1;i<=150;i++)
		ks+=i.toString()+"<br>";
	glt.innerHTML=ks;
	dvv=glt.offsetWidth-1;
	
	var wl=0;
	for(i=0;i<sw.length;i++)
		wl+=sw[i];
	
	var M=dvv-wl/sw.length;
	var nL=Math.ceil(wl/M);
	while(true){
	M=wl/nL;
	i=0;
	var wP=0;
	while(i<sw.length)
	{
		var wL=0;
		L1.push(i);
		while(i<sw.length)
		{
			if(wL+sw[i]>=dvv)break;
			if((wP+wL+sw[i])*nL>wl*(Lw.length+1))break;
			else
			{
				wL+=sw[i];
				i++;
			}
		}
		L2.push(i);
		Lw.push(wL);
		wP+=wL;
	}
	if(Lw.length>nL)
	{
		console.log(142435);
		nL++;
		L1=new Array();
		L2=new Array();
		Lw=new Array();
	}
	else break;
	}
	wow=0;
	for(i=0;i<Lw.length;i++)
		if(Lw[i]>wow)wow=Lw[i];

	var II=dvv-wow;
	glt.style.marginLeft=Math.floor(II/2).toString()+"px";
	glt.style.marginRight=(II-Math.floor(II/2)).toString()+"px";
	var j;
	ks="";
	for(i=0;i<L1.length;i++)
	{
		var w=0;
		for(j=L1[i];j<L2[i];j++)
		{	
			ks+="<span style=\"position:relative;display:inline-block;width:"+sw[j].toString()+";left:"+Math.floor((wow-Lw[i])*(j-L1[i])/(L2[i]-L1[i]))+";\">"+" "+ss[j]+"</span>";
			w+=sw[j];
		}
		ks+="<br>";
		
	}
	glt.innerHTML=ks;
	T++;
	G=false;
	})
}
